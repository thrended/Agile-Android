
//@AndroidEntryPoint
//class MainActivity : ComponentActivity() {
//
//    private val newTaskActivityRequestCode = 1
//    private val editTaskActivityRequestCode = 2
//    private val taskViewModel: TaskViewModel by viewModels {
//        TaskViewModelFactory((application as AgileAndroidApplication).taskRepo)
//    }
//
//    override fun onCreate(savedInstanceState: Bundle?) {
//        super.onCreate(savedInstanceState)
//        setContentView(R.layout.activity_main)
//
//        val recyclerView = findViewById<RecyclerView>(R.id.recyclerview)
//        val adapter = TaskAdapter()
//        recyclerView.adapter = adapter
//        recyclerView.layoutManager = LinearLayoutManager(this)
//
//        taskViewModel.allTasks.observe(this) { tasks ->
//            tasks?.let { adapter.submitList(it) }
//        }
//
//        val fab = findViewById<FloatingActionButton>(R.id.fab)
//        fab.setOnClickListener {
//            val intent = Intent(this@MainActivity, NewTaskActivity::class.java)
//            startActivityForResult(intent, newTaskActivityRequestCode)
//        }
//        setContent {
//            AgileAndroidAlphaTheme {
//                // A surface container using the 'background' color from the theme
//                Surface(
//                    modifier = Modifier.fillMaxSize(),
//                    color = MaterialTheme.colorScheme.background
//                ) {
//                    val navController = rememberNavController()
//                    NavHost(
//                        navController = navController,
//                        startDestination = ScreensOLD.TasksScreen.route
//                    ) {
//                        composable(route = ScreensOLD.TasksScreen.route) {
//                            NotesScreen(navController = navController)
//                        }
//                        composable(
//                            route = ScreensOLD.AddEditTaskScreen.route +
//                                    "?id={id}&taskColor={taskColor}",
//                            arguments = listOf(
//                                navArgument(
//                                    name = "id"
//                                ) {
//                                    type = NavType.IntType
//                                    defaultValue = -1
//                                },
//                                navArgument(
//                                    name = "taskColor"
//                                ) {
//                                    type = NavType.IntType
//                                    defaultValue = -1
//                                }
//                            )
//                        ) {
//                            val color = it.arguments?.getInt("taskColor") ?: -1
//                            AddEditNoteScreen(navController = navController, taskColor = color)
//                        }
//                    }
//                    //MainApp()
//                    //SubTaskScreen()
//                }
//            }
//        }
//    }
//
//    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
//        super.onActivityResult(requestCode, resultCode, data)
//
//        if (requestCode == newTaskActivityRequestCode && resultCode == Activity.RESULT_OK) {
//            data?.getStringExtra(NewTaskActivity.EXTRA_REPLY)?.let {
//                val task_subtask = Task(taskViewModel.numTasks, BasicInfo(it, it))
//                taskViewModel.insert(task_subtask)
//            }
//        } else {
//            Toast.makeText(
//                applicationContext,
//                R.string.empty_not_saved,
//                Toast.LENGTH_LONG
//            ).show()
//        }
//    }
//}

//                auth = FirebaseAuth.getInstance()
//                val navController = rememberNavController()
//                NavHost(navController = navController, startDestination = "tasks_screen") {
//                    composable(route = "tasks_screen") {
//                        TasksScreen(navController = navController)
//                    }
//                    composable(
//                            route = ScreensOLD.AddEditTaskScreen.route +
//                                    "?id={id}&taskColor={taskColor}",
//                            arguments = listOf(
//                                navArgument(
//                                    name = "id"
//                                ) {
//                                    type = NavType.IntType
//                                    defaultValue = -1
//                                },
//                                navArgument(
//                                    name = "taskColor"
//                                ) {
//                                    type = NavType.IntType
//                                    defaultValue = -1
//                                }
//                            )
//                        ) {
//                            val taskId = it.arguments?.getInt("id") ?: -1
//                            val color = it.arguments?.getInt("taskColor") ?: -1
//                            AddEditTaskScreen(navController = navController, id = taskId, taskColor = color)
//                        }
//                }
//                if(auth.currentUser == null) {
//////                    Button(onClick = { registerWithEmail(
//////                        editTextEmailAddress.text.toString(),
//////                        editTextPassword.text.toString()
//////                    ) }) {
//                    CoroutineScope(Dispatchers.IO).launch {
//                        try {
//                            startActivity(Intent(MainActivity(), FirebaseUIActivity::class.java))
//                        } catch (e: Exception) {
//                            withContext(Dispatchers.Main) {
//                                Toast.makeText(this@MainActivity, e.message, Toast.LENGTH_LONG).show()
//                            }
//                        }
//                    }
//                }
//                else {
//                }